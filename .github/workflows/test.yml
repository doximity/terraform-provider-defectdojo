# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

# Default values to simplify job configurations below.
env:
  # Go language version to use for building. This value should also be updated
  # in the release workflow if changed.
  GO_VERSION: '1.17'

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: set up github access
        run: |
          echo "machine github.com" > ~/.netrc
          echo "  login doxbot" >> ~/.netrc
          echo "  password ${{ secrets.GH_RO_TOKEN }}" >> ~/.netrc
      - run: go mod download
      - run: go build -v .

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: set up github access
        run: |
          echo "machine github.com" > ~/.netrc
          echo "  login doxbot" >> ~/.netrc
          echo "  password ${{ secrets.GH_RO_TOKEN }}" >> ~/.netrc
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.0.*'
          - '1.1.*'
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - uses: actions/checkout@v3
      - name: set up github access
        run: |
          echo "machine github.com" > ~/.netrc
          echo "  login doxbot" >> ~/.netrc
          echo "  password ${{ secrets.GH_RO_TOKEN }}" >> ~/.netrc
      - run: go mod download
      - env:
          TF_ACC: "1"
          # api key from admin user (cows) at https://defectdojo.services-dev.dev.dox.pub/api/key-v2
          DEFECTDOJO_ADMIN_PASSWORD: ${{ secrets.DEFECTDOJO_ADMIN_PASSWORD }}
        run: |
          export DEFECTDOJO_APIKEY=$(curl -X POST -H 'content-type: application/json' https://defectdojo.services-dev.dev.dox.pub/api/v2/api-token-auth/ -d "{\"username\": \"cows\", \"password\": \"$DEFECTDOJO_ADMIN_PASSWORD\"}" | jq -r ".token")
          go test -v -cover ./internal/provider/
        timeout-minutes: 10
